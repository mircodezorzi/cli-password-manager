#include "display.h"

#include<ncurses.h>
#include<string>

// TODO make program multi-platform, these two libraries are unix-specific
#include<sys/ioctl.h>
#include<unistd.h>

Display::Display(){
    struct winsize windowsize;
    ioctl(STDOUT_FILENO, TIOCGWINSZ, &windowsize);

    mWindowsize = windowsize;
    
    mWindow = initscr();
    noecho();
    raw();
    keypad(mWindow, TRUE);
}

void Display::printMiddle(size_t y, std::string str, bool standout){
    if(standout) attron(A_STANDOUT);
    mvprintw(y, mWindowsize.ws_col / 2 - str.length() / 2, str.c_str());
    refresh();
    getch();
    endwin();
}

void Display::printFrame(size_t y){
    attron(A_STANDOUT); 
    mvhline(mWindowsize.ws_row - 1, 0, ' ', mWindowsize.ws_col);
}

